@model WebView.Models.HandoverModel.ViewModel
@{
    ViewBag.Title = "Job Handover";
}

<script language="javascript" type="text/javascript">
  var line = 0;

  function verifyEmail(targetVal) {
      var status = false;
      var emailRegEx = /^[A-Z0-9._%+-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}$/i;

      if (targetVal.search(emailRegEx) == -1) {
          status = false;
      }
      else {
          status = true;
      }
      return status;
  }

  function addElement(tag_type, parameters) {
      //Create element
      var newElement = document.createElement(tag_type);

      //Add parameters
      if (typeof parameters != 'undefined') {
          for (parameter_name in parameters) {
              newElement.setAttribute(parameter_name, parameters[parameter_name]);
          }
      }

      return newElement;
  }

  function AddNew() {
      var tbl = document.getElementById('tblRecipient');
      var row = tbl.insertRow(-1);
      row.id = "row" + line;

      for (i = 0; i < 6; i++) {
          row.insertCell(0);
      }

      row.cells[0].innerHTML = "Name";
      row.cells[1].appendChild(addElement('INPUT', { id: 'name' + line, name: 'name' + line, type: 'text', size: '5' }));
      row.cells[3].innerHTML = "Email";
      row.cells[4].appendChild(addElement('INPUT', { id: 'email' + line, name: 'email' + line, type: 'text', size: '5' }));
      b = addElement('INPUT', { id: 'btnDelete' + line, name: 'btnDelete' + line, type: 'button', value: 'Delete' })
      row.cells[5].appendChild(b);
      b.setAttribute('onclick', 'DeleteRow(' + line + ')');

      line = line + 1;
  }

  function DeleteRow(row) {
      if (line > 0) {
          var tbl = document.getElementById('tblRecipient');
          document.getElementById("row" + row).removeNode(true);
      }
  }

  function compileData() {
      var tbl = document.getElementById('tblRecipient');
      var kept = "";

      if (tbl.rows.length > 0) {
          for (i = 0; i < tbl.rows.length; i++) {
              a = tbl.rows[i].id;
              b = a.substring(3, a.length);
              kept = kept + document.getElementById("name" + b).value + "#";
              kept = kept + document.getElementById("email" + b).value + "|";
          }
      }

      return kept;
  }

  function verifyAllEmail() {
      var status = true;
      var tbl = document.getElementById('tblRecipient');

      if (tbl.rows.length > 0) {
          for (i = 0; i < tbl.rows.length; i++) {
              a = tbl.rows[i].id;
              b = a.substring(3, a.length);

              if (verifyEmail(document.getElementById("email" + b).value) == false)
                  status = false;
          }
      }
  
      return status;
  }
  
  function enoughRow() {
      var status = true;
      var tbl = document.getElementById('tblRecipient');
  
      if (tbl.rows.length > 0)
          return true;
      else
          return false;
  }
  
  function verifyForm() {
      a = document.getElementById("subject").value;
      b = document.getElementById("message").value;
  
      if (a.length < 3 || b.length < 3)
          return false;
      else
          return true;
  }
  
  function GetObjectType(object) {
      var con = object.constructor;
      con = con.toString();
      var lastBracket = con.indexOf('()');
      var objectName = con.substring(9, lastBracket)
      return objectName;
  }
  
  function searchStringInArray(stringArray, toCompare) {
      for (var j = 0; j < stringArray.length; j++) {
          if (stringArray[j].match(toCompare))
              return j;
      }
      return -1;
  }
  
  jQuery(document).ready(function ($) {
      var theFunc = new Array();
      var theNumber = new Array(0, 1);
      var theButtAdd = new Array("btn-add", "btn-add-fibre");
      var theButtRemove = new Array("btn-remove", "btn-remove-fibre");
      var theAvailable = new Array("#AvailableUsers", "#FibreAvailable");
      var theSelected = new Array("#RequestedSelected", "#FibreRequested");
  
      var wrapFunction = function (fn, context, params) {
          return function (event) {
              params[0] = event;
              fn.apply(context, params);
          };
      }
  
      var selectFunc = function (event) {
          var id = $(event.target).attr("id");
  
          loc = searchStringInArray(theButtAdd, id);
          if (loc < 0) {
              loc = searchStringInArray(theButtRemove, id);
          }
  
          var selectFrom = id == theButtAdd[loc] ? theAvailable[loc] : theSelected[loc];
          var moveTo = id == theButtAdd[loc] ? theSelected[loc] : theAvailable[loc];
  
          var selectedItems = $(selectFrom + " :selected").toArray();
          $(moveTo).append(selectedItems);
          selectedItems.remove;
      }

      //wrapFunction(selectFunc, this)
  
      $(function () {
          $("#btn-add,#btn-remove").click(selectFunc);
          $("#btn-add-fibre,#btn-remove-fibre").click(selectFunc);
      });
  
      /*
      $('#btn-send').click(function () {
      lists = document.getElementById("RequestedSelected");
  
      for (i = 0; i < lists.options.length; i++) {
      alert(lists.options[i].value);
      }
      });
      */

      $("#dialog:ui-dialog").dialog("destroy");
  
      $('#btnAdd').click(function () {
          AddNew();
      });
  
      $('#save-btn').click(function () {
          t = document.getElementById("schemeName").value;
          var cmsg = confirm('Are you sure you want to send for approval?');
          if (cmsg == 0) {
              return false;
          } 
          //else {
          //    return false;
          //}
      });
  
      $('#btnCancel').click(function () {
          t = document.getElementById("Jobtype").value;
          //alert (t);
          if (t == "ISP") {
              window.location = "ISPList";
          }
          else if (t == "OSP") {
              window.location = "List";
          }
      });
  
      $('#btnSent').click(function () {
          document.getElementById("subject").value = "Handover";
          document.getElementById("message").value = "submit job";
          lists = document.getElementById("RequestedSelected");
          alert(compileData());
          targetU = "";
  
          for (i = 0; i < lists.options.length; i++) {
              //alert(lists.options[i].value);
              targetU = targetU + lists.options[i].value + "|";
          }
  
          if (verifyForm()) {
              if (enoughRow()) {
                  if (verifyAllEmail()) {
                      $.ajax({
                          url: "/Job/SendNotification",
                          type: "POST",
                          dataType: "html",
                          data: {
                              "subject": document.getElementById("subject").value,
                              "message": document.getElementById("message").value,
                              "jobId": document.getElementById("targetId").value,
                              "schemeName": document.getElementById("schemeName").value,
                              "from": "temp user",
                              "recipient": compileData(),
                              "targetUser": targetU,
                              "random": Math.random()
                          },
                          beforeSend: function () {
  
                          },
                          success: function (data) {
                              var res = jQuery.parseJSON(data);
  
                              if (res.result == "ok") {
                                  $("#dialog-message").css({ visibility: "visible" }); //.css({ opacity: 0.0, visibility: "visible" }).animate({ opacity: 1.0 });
                                  $("#dialog-message").dialog({
                                      modal: true,
                                      buttons: {
                                          Ok: function () {
                                              $(this).dialog("close");

                                              window.location.href = 'List';
  
                                          }
                                      }
                                  });
                              }
                              else {
                                  $.msgBox("Error! ");
                              }
                          }
                      });
                  }
                  else {
                      $.msgBox("There is an invalid email in the list.");
                  }
              }
              else {
                  $.msgBox("Please insert at least 1 recipient");
              }
          }
          else {
              $.msgBox("Please fill-in subject and message!");
          }
      });
  
      $("#btnAdd").button();
      $("#btnSent").button();
      $("#btn-add").button();
      $("#btn-remove").button();
      $("#save-btn").button();
      $("#btnCancel").button();
  });     
  </script>

<br />
<br />
<h2>
Job Management > Send For Approval
  </h2>
<div id="dialog-message" title="Send complete" style="visibility:hidden;display:none;">
<p>
  <span class="ui-icon ui-icon-circle-check" style="float:left; margin:0 7px 50px 0;"></span>
    Your message has been send.
    </p>
  </div>
<table>
<tr>
  <td class="text_field" style="font-weight:bold">
    Job ID:
      </td>
    <td class="text_field">
    #@ViewBag.jobId <input type="hidden" id="Jobtype" value="@ViewBag.JobType" />
      </td>
    <td class="text_field"></td>
    </tr>
  <tr>
  <td class="text_field" style="font-weight:bold">
    Scheme Name:
      </td>
    <td class="text_field">@ViewBag.scheme_name</td>
    <td class="text_field"></td>
    </tr>
  @*<tr>
  <td class="text_field" style="font-weight:bold">Approval</td>
  <td class="text_field">@Html.RadioButton("auto", true) auto</td>
  <td class="text_field">@Html.RadioButton("auto", false) manual</td>
  </tr>*@
  </table>
<br />

@Html.Hidden("subject")
@Html.Hidden("message")
<div style="padding-left:0px">
<span class="sub_title">
  List of recipients email.
    </span>
  <br />
  <br />
  <table id="tblRecipient">
  </table>
  <input type="button" value="Add new" id="btnAdd" />
  <input type="button" value="Send" id="btnSent" />
  <input type="button" value="Cancel" id="btnCancel" />
  </div>
<br />
<span class="text_field" style="font-weight:bold; padding-left:2px;">
Approver List
  </span>
<br />
@using (Html.BeginForm("Handover", "Job", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<input type="hidden" id="targetId" name="targetId" value="@ViewBag.jobId" />
    <input type="hidden" id="schemeName" name="schemeName" value="@ViewBag.scheme_name" />
    <div>
    <table>
      <thead>
        <tr>
          <th>
            All List :
              </th>
            <th>
            </th>
            <th>
            Selected List :
              </th>
            </tr>
          </thead>
        <tbody>
        <tr>
          <td valign="top">
            @Html.ListBoxFor(model => model.AvailableUsers,
              new MultiSelectList(Model.AvailableUsers, "Id",
                  "Name", Model.AvailableSelected), new { size = "6", style = "width:200px;", id = "AvailableUsers" })
            
              </td>
            <td valign="top">
            <input type="button" value="Add" id="btn-add" style="height:30px;width:80px;" />
              <br />
              <br />
              <input type="button" value="Remove" id="btn-remove" style="height:30px;width:80px; vertical-align:top;" />
            
              </td>
            <td valign="top">
            @Html.ListBoxFor(model => model.RequestedSelected,
              new MultiSelectList(Model.RequestedUsers, "Id",
                  "Name", Model.RequestedSelected), new { size = "6", style = "width:200px;", id = "RequestedSelected" })
                      </td>
            </tr>
          <tr> 
          <td></td>
            <td></td>               
            <td>
            <input type="submit" value="Save" id="save-btn" style="height:30px;width:80px; vertical-align:top; float:right;" />
              </td>
            </tr>
          </tbody>
        </table>
      <br />
      @Html.HiddenFor(model => model.SavedRequested)
      </div>
    }